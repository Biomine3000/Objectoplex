#!/usr/bin/env python
# -*- coding: utf-8 -*-
import socket
import select

from optparse import OptionParser
from time import sleep

from system import BusinessObject

def main():
    parser = OptionParser()
    parser.add_option("--host", dest="host", default="localhost")
    parser.add_option("--port", dest="port", default=7890, type="int")
   
    opts, args = parser.parse_args()

    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    sock.connect((opts.host, opts.port))

    sock_file = sock.makefile()
    metadata = {'event': 'services/request',
                'name': 'statistics'}

    while True:
        req = BusinessObject(metadata, None)
        req.tofile(sock_file)

        while True:
            rlist, wlist, xlist = select.select([sock], [], [], 1)
            if len(rlist) > 0:
                resp = BusinessObject.read_from_socket(sock)
                if resp is None:
                    raise InvalidObject
                if resp.event == 'services/reply' and \
                   resp.metadata.get('in-reply-to') == req.id:
                    print resp.metadata['statistics']
                    break
        sleep(5)

    sock.close()


if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt, ke:
        print "Exiting."
